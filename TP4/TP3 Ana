/*
Nombre: Ana Sofía Padilla Daza
Código: 202021748
Correo: a.padillad@uniandes.edu.co
*/
#include <stdio.h> 




char hexaConversor(int numb){
    char final;

    if (numb >= 10) {
        if (numb == 10) {
            final = 'A';}
        else if (numb == 11){
            final = 'B';}
        else if (numb == 12){
            final = 'C';}
        else if (numb == 13){
            final = 'D';}
        else if (numb == 14){
            final = 'E';}
        else if (numb == 15){
            final = 'F';}
    }
    else if (numb < 10) {
        final = numb + '0';
    }
    else{
        printf("Se ingresó un valor no válido");
    }

 return final;
}



void empaquetamiento(int *a, int size){  // convierte los numeros en el arreglo *a a hexadecimal
    for (int i = 0; i < size; i++) { // este for itera a traves del arreglo
        char hexnum[8]; // crea un arreglo de caracteres de tamaño 8 porque esa es la cantidad de digitos en hexa necesarios para representar un int (8 bytes/32 bits)
        
        for(int j = 0; j < 8; j++){ // este for itera 8 veces para poder obtener los 8 digitos de hexa que representan el int ( un hexa representa 4 bits) 
        	int hexunit = ((a[i] >> (j*4)) & 15); // hace que el hexunit quede con solo los  4 bits del numero que se necesitan para convertir el número
        	                                      //Se corre el numero 4 bits a la derecha por cada iteracion. Esto borra los bits que ya han sido procesados 
                                                  //y trae los 4 bits siguientes al frente. Luego al hacerle & 15 (pues 15 en bits es 1111) se extraen unicamente los 4 bits menos significativos 
                                                  //asi se eliminan todos los demas. ej. (en 8 bits) A[i] = 234 = 11101010. 
                                                  //Entonces cuando j=0, a[i] >> 0*4 = a[i] >> 0 = 11101010, luego se hace 11101010 & 00001111 = 00001010 = 10 = 'A'. 
                                                  //Cuando j=1 a[i] >>1*4 = a[i] >> 4 = 00001110, luego 00001110 & 00001111 = 00001110 = 14 = 'E'
            hexnum[7-j] = hexaConversor(hexunit);// se convierte el hexunit a hexadecimal yse agrega al final del arreglo de caracteres para que quede en el orden corracto (por eso es 7-j)
        }
        
        printf("v[%d] = ", i);
        
        for(int j = 0; j < 8; j+=2){  // se itera a traves del arreglo otra vez y si imprime cada pareja del hexa
        	printf("0x%c%c ", hexnum[j], hexnum[j+1]);
        }
    }


    return;
}


int main(){    

    int size, i;
    int *a;
    
    printf("Indique el tamaño del vector: ");
    scanf("%d", &size);

    a = (int*) calloc (size, sizeof(int));

    if (size > 0) {
         for (i=0; i<size; ++i) {
             printf("Indique el elemento: ");
             scanf("%d", &a[i]);
         }

    }
    else {
        printf("Escribio un valor no válido");
    }

    empaquetamiento(a, size);
    return 0;

}